openapi: 3.0.0
info:
  title: Mesterember
  description: Application for administrators to maintain the application's background
  version: 1.0.0
servers:
  - url: http://localhost:3000
  - description: The Url of the backend server.
  - url: http://localhost:4200
  - description: The Url of the frontend application.
paths:
  /login:
    post:
      description: Logging in - a HTTP POST request to /login route with email and password data of the user. The response body contains a JSON object with jwt accessToken, refreshToken & user data object from the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples: 
              loginData:
                summary: A request body example for logging in with admin role
                value: {"email": "admin@test.com","password": "admin_pw"}
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loginreply'
  /users:
    get:
      description: Returns a list of users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: The requested data was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Person has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{user_id}:
    get:
      description: Returns the user object with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Person data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User with the given ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a person
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: User has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The User to be updated was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Update a person
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: User has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The User to be updated was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: User has been deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User with requested id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services:
    get:
      description: Returns a list of services
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of services returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The requested data was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new service
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '201':
          description: Service has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services/{service_id}:
    get:
      description: Returns the service object with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: service_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Service data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Service with the given ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a service
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '201':
          description: Service has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The Service to be updated was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Update a service
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '201':
          description: Service has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The Service to be updated was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a Service
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Service has been deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden. Missing authentication or insufficient authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Service with requested id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Loginreply:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      required:
        - email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        address:
          type: object
          $ref: '#/components/schemas/Address'
        active:
          type: boolean
        password:
          type: string
        posts: 
          type: array
          items:
            $ref: '#/components/schemas/Service'
        role:
          type: string
          description: Role of user, like user, editor or admin
          enum:
            - 'user'
            - 'editor'
            - 'admin'
          default: 'user'
    Address:
      type: object
      properties:
        city:
          type: string
        street:
          type: string
        houseNumber:
          type: string
    Service:
      type: object
      required:
        - name
        - type
        - uploader
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        contacts:
          type: object
          $ref: '#/components/schemas/ContactInfo'
        active:
          type: boolean
        uploader:
          type: string
    ContactInfo:
      type: object
      properties:
        contactPerson:
          type: string
        available:
          type: string
        tel:
          type: array
          items:
            type: string
        email:
          type: array
          items:
            type: string
        address:
          type: object
          $ref: '#/components/schemas/Address'
        webpageUrl:
          type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean